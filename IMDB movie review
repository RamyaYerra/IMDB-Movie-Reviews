import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
# Assuming dataset is in two columns: 'review' and 'sentiment' (1 for positive, 0 for negative)
data = pd.read_csv('/kaggle/IMDB Dataset.csv')

# Split into training and testing sets
train_data, test_data = train_test_split(data, test_size=0.5, random_state=42)

# Preprocess text data
vectorizer = TfidfVectorizer(stop_words='english', max_features=5000)
X_train = vectorizer.fit_transform(train_data['review'])
X_test = vectorizer.transform(test_data['review'])
y_train = train_data['sentiment']
y_test = test_data['sentiment']
# Train logistic regression classifier
model = LogisticRegression()
model.fit(X_train, y_train)
# Predict sentiment on test set
y_pred = model.predict(X_test)

# Evaluate model performance
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy}')
print('Classification Report:')
print(report)
# Count positive and negative reviews
positive_reviews = (y_pred == 1).sum()
negative_reviews = (y_pred == 0).sum()

print(f'Number of positive reviews: {positive_reviews}')
print(f'Number of negative reviews: {negative_reviews}')
